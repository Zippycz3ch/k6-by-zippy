{
  "annotations": {
    "list": [
      {
        "builtIn": 1,
        "datasource": {
          "type": "datasource",
          "uid": "grafana"
        },
        "enable": true,
        "hide": true,
        "iconColor": "rgba(0, 211, 255, 1)",
        "name": "Annotations & Alerts",
        "target": {
          "limit": 100,
          "matchAny": false,
          "tags": [],
          "type": "dashboard"
        },
        "type": "dashboard"
      }
    ]
  },
  "editable": true,
  "fiscalYearStartMonth": 0,
  "graphTooltip": 1,
  "id": 8,
  "links": [],
  "liveNow": false,
  "panels": [
    {
      "collapsed": false,
      "gridPos": {
        "h": 1,
        "w": 24,
        "x": 0,
        "y": 0
      },
      "id": 29,
      "panels": [],
      "title": "Test",
      "type": "row"
    },
    {
      "datasource": {
          "type": "influxdb",
          "uid": "P5697886F9CA74929"
        },
      "fieldConfig": {
        "defaults": {
          "color": {
            "mode": "palette-classic"
          },
          "custom": {
            "axisBorderShow": false,
            "axisCenteredZero": false,
            "axisColorMode": "text",
            "axisLabel": "",
            "axisPlacement": "left",
            "barAlignment": 0,
            "drawStyle": "line",
            "fillOpacity": 0,
            "gradientMode": "none",
            "hideFrom": {
              "legend": false,
              "tooltip": false,
              "viz": false
            },
            "insertNulls": false,
            "lineInterpolation": "linear",
            "lineWidth": 1,
            "pointSize": 5,
            "scaleDistribution": {
              "type": "linear"
            },
            "showPoints": "auto",
            "spanNulls": false,
            "stacking": {
              "group": "A",
              "mode": "none"
            },
            "thresholdsStyle": {
              "mode": "off"
            }
          },
          "displayName": "Avg Response - ${__field.labels.testid}",
          "mappings": [],
          "min": 0,
          "thresholds": {
            "mode": "absolute",
            "steps": [
              {
                "color": "green",
                "value": null
              },
              {
                "color": "red",
                "value": 80
              }
            ]
          },
          "unit": "short",
          "unitScale": true
        },
        "overrides": [
          {
            "matcher": {
              "id": "byFrameRefID",
              "options": "RPS"
            },
            "properties": [
              {
                "id": "displayName",
                "value": "RPS"
              },
              {
                "id": "color",
                "value": {
                  "fixedColor": "blue",
                  "mode": "fixed"
                }
              },
              {
                "id": "custom.axisPlacement",
                "value": "right"
              }
            ]
          },
          {
            "matcher": {
              "id": "byFrameRefID",
              "options": "VUs"
            },
            "properties": [
              {
                "id": "displayName",
                "value": "Active VUs"
              },
              {
                "id": "custom.lineStyle",
                "value": {
                  "dash": [
                    10,
                    10
                  ],
                  "fill": "dash"
                }
              },
              {
                "id": "color",
                "value": {
                  "fixedColor": "orange",
                  "mode": "fixed"
                }
              },
              {
                "id": "custom.axisPlacement",
                "value": "right"
              }
            ]
          },
          {
            "matcher": {
              "id": "byFrameRefID",
              "options": "http_req_failed"
            },
            "properties": [
              {
                "id": "color",
                "value": {
                  "fixedColor": "dark-red",
                  "mode": "fixed"
                }
              },
              {
                "id": "displayName",
                "value": "Failed requests"
              },
              {
                "id": "custom.axisPlacement",
                "value": "right"
              }
            ]
          }
        ]
      },
      "gridPos": {
        "h": 12,
        "w": 12,
        "x": 0,
        "y": 1
      },
      "id": 11,
      "maxDataPoints": 200000,
      "options": {
        "legend": {
          "calcs": [
            "min",
            "mean",
            "max",
            "lastNotNull"
          ],
          "displayMode": "table",
          "placement": "bottom",
          "showLegend": true
        },
        "tooltip": {
          "hideZeros": false,
          "maxHeight": 600,
          "mode": "multi",
          "sort": "none"
        }
      },
      "pluginVersion": "12.0.1",
      "targets": [
        {
          "datasource": {
          "type": "influxdb",
          "uid": "P5697886F9CA74929"
        },
          "hide": false,
          "query": "SELECT mean(\"value\") FROM \"measurement\" WHERE $timeFilter GROUP BY time($__interval) fill(null)",
          "rawQuery": true,
          "refId": "RPS",
          "resultFormat": "time_series"
        },
        {
          "datasource": {
          "type": "influxdb",
          "uid": "P5697886F9CA74929"
        },
          "hide": false,
          "query": "SELECT mean(\"value\") FROM \"measurement\" WHERE $timeFilter GROUP BY time($__interval) fill(null)",
          "rawQuery": true,
          "refId": "VUs"
        },
        {
          "datasource": {
          "type": "influxdb",
          "uid": "P5697886F9CA74929"
        },
          "hide": false,
          "query": "SELECT mean(\"value\") FROM \"measurement\" WHERE $timeFilter GROUP BY time($__interval) fill(null)",
          "rawQuery": true,
          "refId": "http_req_failed"
        }
      ],
      "title": "Test profile",
      "type": "timeseries"
    },
    {
      "datasource": {
          "type": "influxdb",
          "uid": "P5697886F9CA74929"
        },
      "fieldConfig": {
        "defaults": {
          "color": {
            "mode": "palette-classic"
          },
          "custom": {
            "axisBorderShow": false,
            "axisCenteredZero": false,
            "axisColorMode": "text",
            "axisLabel": "",
            "axisPlacement": "right",
            "barAlignment": 0,
            "drawStyle": "line",
            "fillOpacity": 0,
            "gradientMode": "none",
            "hideFrom": {
              "legend": false,
              "tooltip": false,
              "viz": false
            },
            "insertNulls": false,
            "lineInterpolation": "linear",
            "lineWidth": 1,
            "pointSize": 5,
            "scaleDistribution": {
              "type": "linear"
            },
            "showPoints": "auto",
            "spanNulls": false,
            "stacking": {
              "group": "A",
              "mode": "none"
            },
            "thresholdsStyle": {
              "mode": "off"
            }
          },
          "displayName": "${__field.labels.name}",
          "mappings": [],
          "min": 0,
          "thresholds": {
            "mode": "absolute",
            "steps": [
              {
                "color": "green",
                "value": null
              }
            ]
          },
          "unitScale": true
        },
        "overrides": []
      },
      "gridPos": {
        "h": 12,
        "w": 12,
        "x": 12,
        "y": 1
      },
      "id": 19,
      "maxDataPoints": 35000,
      "options": {
        "legend": {
          "calcs": [
            "min",
            "mean",
            "max",
            "lastNotNull",
            "sum"
          ],
          "displayMode": "table",
          "placement": "bottom",
          "showLegend": true,
          "sortBy": "Total",
          "sortDesc": true
        },
        "tooltip": {
          "hideZeros": false,
          "maxHeight": 600,
          "mode": "multi",
          "sort": "none"
        }
      },
      "pluginVersion": "12.0.1",
      "targets": [
        {
          "datasource": {
          "type": "influxdb",
          "uid": "P5697886F9CA74929"
        },
          "hide": false,
          "query": "from(bucket: \"k6\")\r\n  |> range(start: v.timeRangeStart, stop: v.timeRangeStop)\r\n  |> filter(fn: (r) => r[\"_measurement\"] == \"http_req_failed\")\r\n  |> filter(fn: (r) => r[\"group\"] != \"::setup\")\r\n  |> filter(fn: (r) => r[\"group\"] != \"::teardown\")\r\n  |> filter(fn: (r) => r[\"release\"] =~ /${release:regex}/)\r\n  |> filter(fn: (r) => r[\"testid\"] =~ /${testId:regex}/)\r\n  |> filter(fn: (r) => r[\"scenario\"] =~ /${scenario:regex}/)\r\n  |> filter(fn: (r) => r[\"buildId\"] =~ /${buildId:regex}/)\r\n    |> filter(fn: (r) => r[\"branch\"] =~ /${branch:regex}/)\r\n  |> filter(fn: (r) => r[\"_field\"] == \"value\")\r\n  |> group(columns: [\"_measurement\", \"name\"])\r\n  |> aggregateWindow(every: 1s, fn: sum, createEmpty: false)\r\n  |> yield(name: \"sum\")\r\n",
          "refId": "A"
        }
      ],
      "title": "Failed Requests",
      "type": "timeseries"
    },
    {
      "datasource": {
          "type": "influxdb",
          "uid": "P5697886F9CA74929"
        },
      "fieldConfig": {
        "defaults": {
          "color": {
            "mode": "palette-classic"
          },
          "custom": {
            "axisBorderShow": false,
            "axisCenteredZero": false,
            "axisColorMode": "text",
            "axisLabel": "",
            "axisPlacement": "right",
            "barAlignment": 0,
            "drawStyle": "line",
            "fillOpacity": 0,
            "gradientMode": "none",
            "hideFrom": {
              "legend": false,
              "tooltip": false,
              "viz": false
            },
            "insertNulls": false,
            "lineInterpolation": "linear",
            "lineWidth": 1,
            "pointSize": 5,
            "scaleDistribution": {
              "type": "linear"
            },
            "showPoints": "auto",
            "spanNulls": false,
            "stacking": {
              "group": "A",
              "mode": "none"
            },
            "thresholdsStyle": {
              "mode": "off"
            }
          },
          "displayName": "${__field.labels.name}",
          "mappings": [],
          "min": 0,
          "thresholds": {
            "mode": "absolute",
            "steps": [
              {
                "color": "green",
                "value": null
              },
              {
                "color": "red",
                "value": 80
              }
            ]
          },
          "unitScale": true
        },
        "overrides": []
      },
      "gridPos": {
        "h": 21,
        "w": 12,
        "x": 0,
        "y": 13
      },
      "id": 146,
      "maxDataPoints": 35000,
      "options": {
        "legend": {
          "calcs": [
            "min",
            "mean",
            "max",
            "lastNotNull"
          ],
          "displayMode": "table",
          "placement": "bottom",
          "showLegend": true,
          "sortBy": "Name",
          "sortDesc": true
        },
        "tooltip": {
          "hideZeros": false,
          "maxHeight": 600,
          "mode": "multi",
          "sort": "none"
        }
      },
      "pluginVersion": "12.0.0",
      "targets": [
        {
          "datasource": {
          "type": "influxdb",
          "uid": "P5697886F9CA74929"
        },
          "hide": false,
          "query": "from(bucket: \"k6\")\n  |> range(start: v.timeRangeStart, stop: v.timeRangeStop)\n  |> filter(fn: (r) => r[\"_field\"] == \"value\")\n  |> filter(fn: (r) => r[\"_measurement\"] == \"http_reqs\")\n  |> filter(fn: (r) => r[\"group\"] != \"::setup\")\n  |> filter(fn: (r) => r[\"group\"] != \"::teardown\")\n  |> filter(fn: (r) => r[\"branch\"] =~ /${branch:regex}/)\n  |> filter(fn: (r) => r[\"release\"] =~ /${release:regex}/)\n  |> filter(fn: (r) => r[\"buildId\"] =~ /${buildId:regex}/)\n  |> filter(fn: (r) => r[\"testid\"] =~ /${testId:regex}/)\n  |> filter(fn: (r) => r[\"scenario\"] =~ /${scenario:regex}/)\n  |> group(columns: [\"_measurement\", \"name\"])\n  |> aggregateWindow(every: 1s, fn: sum, createEmpty: true)\n  |> yield(name: \"sum\")\n",
          "refId": "RPS"
        }
      ],
      "title": "RPS",
      "type": "timeseries"
    },
    {
      "datasource": {
          "type": "influxdb",
          "uid": "P5697886F9CA74929"
        },
      "fieldConfig": {
        "defaults": {
          "color": {
            "mode": "palette-classic"
          },
          "custom": {
            "axisBorderShow": false,
            "axisCenteredZero": false,
            "axisColorMode": "text",
            "axisLabel": "",
            "axisPlacement": "right",
            "barAlignment": 0,
            "drawStyle": "line",
            "fillOpacity": 0,
            "gradientMode": "none",
            "hideFrom": {
              "legend": false,
              "tooltip": false,
              "viz": false
            },
            "insertNulls": false,
            "lineInterpolation": "linear",
            "lineWidth": 1,
            "pointSize": 5,
            "scaleDistribution": {
              "type": "linear"
            },
            "showPoints": "auto",
            "spanNulls": false,
            "stacking": {
              "group": "A",
              "mode": "none"
            },
            "thresholdsStyle": {
              "mode": "off"
            }
          },
          "displayName": "${__field.labels.name}",
          "mappings": [],
          "min": 0,
          "thresholds": {
            "mode": "absolute",
            "steps": [
              {
                "color": "green",
                "value": null
              }
            ]
          },
          "unit": "ms",
          "unitScale": true
        },
        "overrides": []
      },
      "gridPos": {
        "h": 21,
        "w": 12,
        "x": 12,
        "y": 13
      },
      "id": 145,
      "maxDataPoints": 35000,
      "options": {
        "legend": {
          "calcs": [
            "min",
            "mean",
            "max",
            "lastNotNull"
          ],
          "displayMode": "table",
          "placement": "bottom",
          "showLegend": true,
          "sortBy": "Max",
          "sortDesc": true
        },
        "tooltip": {
          "hideZeros": false,
          "maxHeight": 600,
          "mode": "multi",
          "sort": "none"
        }
      },
      "pluginVersion": "12.0.0",
      "targets": [
        {
          "datasource": {
          "type": "influxdb",
          "uid": "P5697886F9CA74929"
        },
          "hide": false,
          "query": "from(bucket: \"k6\")\r\n  |> range(start: v.timeRangeStart, stop: v.timeRangeStop)\r\n  |> filter(fn: (r) => r._measurement == \"http_req_duration\")\r\n  |> filter(fn: (r) => r[\"status\"] == \"200\")\r\n  |> filter(fn: (r) => r[\"group\"] != \"::setup\")\r\n  |> filter(fn: (r) => r[\"group\"] != \"::teardown\")\r\n  |> filter(fn: (r) => r._field == \"value\")\r\n  |> filter(fn: (r) => r[\"branch\"] =~ /${branch:regex}/)\r\n  |> filter(fn: (r) => r[\"release\"] =~ /${release:regex}/)\r\n  |> filter(fn: (r) => r[\"buildId\"] =~ /${buildId:regex}/)\r\n  |> filter(fn: (r) => r[\"testid\"] =~ /${testId:regex}/)\r\n  |> filter(fn: (r) => r[\"scenario\"] =~ /${scenario:regex}/)\r\n  |> group(columns: [\"_measurement\", \"name\"])\r\n  |> yield(name: \"mean\")",
          "refId": "Response time"
        }
      ],
      "title": "API Response time",
      "type": "timeseries"
    },
    {
      "datasource": {
          "type": "influxdb",
          "uid": "P5697886F9CA74929"
        },
      "fieldConfig": {
        "defaults": {
          "color": {
            "mode": "thresholds"
          },
          "custom": {
            "align": "auto",
            "cellOptions": {
              "type": "auto"
            },
            "filterable": true,
            "inspect": false
          },
          "mappings": [],
          "thresholds": {
            "mode": "absolute",
            "steps": [
              {
                "color": "green",
                "value": null
              }
            ]
          },
          "unitScale": true
        },
        "overrides": [
          {
            "matcher": {
              "id": "byName",
              "options": "EP"
            },
            "properties": [
              {
                "id": "custom.width",
                "value": 286
              }
            ]
          }
        ]
      },
      "gridPos": {
        "h": 24,
        "w": 24,
        "x": 0,
        "y": 34
      },
      "id": 143,
      "options": {
        "cellHeight": "sm",
        "footer": {
          "countRows": false,
          "fields": [
            "Failures"
          ],
          "reducer": [
            "sum"
          ],
          "show": true
        },
        "showHeader": true,
        "sortBy": [
          {
            "desc": true,
            "displayName": "Requests count"
          }
        ]
      },
      "pluginVersion": "10.3.4",
      "targets": [
        {
          "datasource": {
          "type": "influxdb",
          "uid": "P5697886F9CA74929"
        },
          "query": "data = from(bucket: \"k6\")\r\n  |> range(start: v.timeRangeStart, stop: v.timeRangeStop)\r\n  |> filter(fn: (r) => r._measurement == \"http_req_duration\" or r._measurement == \"http_req_failed\")\r\n  |> filter(fn: (r) => r[\"group\"] != \"::setup\")\r\n  |> filter(fn: (r) => r[\"group\"] != \"::teardown\")\r\n  |> filter(fn: (r) => r[\"buildId\"] =~ /${buildId:regex}/)\r\n  |> filter(fn: (r) => r[\"release\"] =~ /${release:regex}/)\r\n  |> filter(fn: (r) => r[\"branch\"] =~ /${branch:regex}/)\r\n  |> filter(fn: (r) => r[\"testid\"] =~ /${testId:regex}/)\r\n  |> filter(fn: (r) => r[\"scenario\"] =~ /${scenario:regex}/)\r\n  |> filter(fn: (r) => r._field == \"value\")\r\n  |> group(columns: [\"name\"])\r\n\r\nquantile_result = data\r\n  |> filter(fn: (r) => r._measurement == \"http_req_duration\")\r\n  |> quantile(q: 0.90, method: \"exact_mean\")\r\n  |> map(fn: (r) => ({r with \"Percentile 90th (ms)\": r._value}))\r\n  |> drop(columns: [\"_value\", \"_start\", \"_stop\", \"_measurement\", \"_field\"])\r\n\r\nmean_result = data\r\n  |> filter(fn: (r) => r._measurement == \"http_req_duration\")\r\n  |> mean(column: \"_value\")\r\n  |> map(fn: (r) => ({r with \"Avg Request Time (ms)\": r._value}))\r\n  |> drop(columns: [\"_value\", \"_start\", \"_stop\", \"_measurement\", \"_field\"])\r\n\r\ncount_result = data\r\n  |> filter(fn: (r) => r._measurement == \"http_req_duration\")\r\n  |> count(column: \"_value\")\r\n  |> map(fn: (r) => ({r with \"Requests count\": r._value}))\r\n  |> drop(columns: [\"_value\", \"_start\", \"_stop\", \"_measurement\", \"_field\"])\r\n\r\nfailure_result = data\r\n  |> filter(fn: (r) => r._measurement == \"http_req_failed\")\r\n  |> sum(column: \"_value\")\r\n  |> map(fn: (r) => ({r with \"Failures\": r._value}))\r\n  |> drop(columns: [\"_value\", \"_start\", \"_stop\", \"_measurement\", \"_field\"])\r\n\r\np95_result = data\r\n  |> filter(fn: (r) => r._measurement == \"http_req_duration\")\r\n  |> quantile(q: 0.95, method: \"exact_mean\")\r\n  |> map(fn: (r) => ({r with \"Percentile 95th (ms)\": r._value}))\r\n  |> drop(columns: [\"_value\", \"_start\", \"_stop\", \"_measurement\", \"_field\"])\r\n\r\nlongest_result = data\r\n  |> filter(fn: (r) => r._measurement == \"http_req_duration\")\r\n  |> max(column: \"_value\")\r\n  |> map(fn: (r) => ({r with \"Longest Request (ms)\": r._value}))\r\n  |> drop(columns: [\"_value\", \"_start\", \"_stop\", \"_measurement\", \"_field\"])\r\n\r\nshortest_result = data\r\n  |> filter(fn: (r) => r._measurement == \"http_req_duration\")\r\n  |> min(column: \"_value\")\r\n  |> map(fn: (r) => ({r with \"Shortest Request (ms)\": r._value}))\r\n  |> drop(columns: [\"_value\", \"_start\", \"_stop\", \"_measurement\", \"_field\"])\r\n\r\nquantile_mean_join = join(tables: {quantile: quantile_result, mean: mean_result}, on: [\"name\"])\r\nquantile_mean_count_join = join(tables: {quantile_mean: quantile_mean_join, count: count_result}, on: [\"name\"])\r\nfailures_join = join(tables: {quantile_mean_count: quantile_mean_count_join, failures: failure_result}, on: [\"name\"])\r\np95_join = join(tables: {failures_join: failures_join, p95: p95_result}, on: [\"name\"])\r\nlongest_join = join(tables: {p95_join: p95_join, longest: longest_result}, on: [\"name\"])\r\nfinal_result = join(tables: {longest_join: longest_join, shortest: shortest_result}, on: [\"name\"])\r\n\r\nfinal_result\r\n  |> keep(columns: [\"name\", \"Requests count\", \"Percentile 90th (ms)\", \"Avg Request Time (ms)\", \"Failures\", \"Percentile 95th (ms)\", \"Longest Request (ms)\", \"Shortest Request (ms)\"])\r\n  |> group(columns: [])\r\n  |> yield(name: \"request_stats\")",
          "refId": "A"
        }
      ],
      "title": "EPs statistics",
      "transformations": [
        {
          "id": "organize",
          "options": {
            "excludeByName": {},
            "includeByName": {},
            "indexByName": {
              "Avg Request Time (ms)": 2,
              "Failures": 3,
              "Longest Request (ms)": 7,
              "Percentile 90th (ms)": 4,
              "Percentile 95th (ms)": 5,
              "Requests count": 1,
              "Shortest Request (ms)": 6,
              "name": 0
            },
            "renameByName": {
              "name": "EP"
            }
          }
        }
      ],
      "type": "table"
    }
  ],
  "refresh": "5s",
  "schemaVersion": 39,
  "tags": [],
  "templating": {
    "list": [
      {
        "allowCustomValue": false,
        "current": {
          "isNone": true,
          "selected": false,
          "text": "None",
          "value": ""
        },
        "datasource": {
          "type": "influxdb",
          "uid": "P5697886F9CA74929"
        },
        "definition": "import \"influxdata/influxdb/schema\"\r\nschema.tagValues(bucket: v.defaultBucket, tag: \"project\")",
        "description": "",
        "hide": 0,
        "includeAll": true,
        "label": "project",
        "multi": true,
        "name": "project",
        "options": [],
        "query": "import \"influxdata/influxdb/schema\"\r\nschema.tagValues(bucket: v.defaultBucket, tag: \"project\")",
        "refresh": 1,
        "regex": "",
        "skipUrlSync": false,
        "sort": 0,
        "type": "query"
      },
      {
        "allowCustomValue": false,
        "current": {
          "text": "All",
          "value": [
            "$__all"
          ]
        },
        "datasource": {
          "type": "influxdb",
          "uid": "P5697886F9CA74929"
        },
        "definition": "import \"influxdata/influxdb/schema\"\nimport \"strings\"\n\nschema.tagValues(\n  bucket: v.defaultBucket,\n  tag: \"testid\",\n  predicate: (r) => r.project =~ /^${project:regex}$/\n)\n  |> filter(fn: (r) => not strings.hasPrefix(v: r._value, prefix: \"K6-UI-\"))",
        "hide": 0,
        "includeAll": true,
        "label": "Test",
        "multi": true,
        "name": "testId",
        "options": [],
        "query": {
          "0": "i",
          "1": "m",
          "2": "p",
          "3": "o",
          "4": "r",
          "5": "t",
          "6": " ",
          "7": "\"",
          "8": "i",
          "9": "n",
          "10": "f",
          "11": "l",
          "12": "u",
          "13": "x",
          "14": "d",
          "15": "a",
          "16": "t",
          "17": "a",
          "18": "/",
          "19": "i",
          "20": "n",
          "21": "f",
          "22": "l",
          "23": "u",
          "24": "x",
          "25": "d",
          "26": "b",
          "27": "/",
          "28": "s",
          "29": "c",
          "30": "h",
          "31": "e",
          "32": "m",
          "33": "a",
          "34": "\"",
          "35": "\r",
          "36": "\n",
          "37": "s",
          "38": "c",
          "39": "h",
          "40": "e",
          "41": "m",
          "42": "a",
          "43": ".",
          "44": "t",
          "45": "a",
          "46": "g",
          "47": "V",
          "48": "a",
          "49": "l",
          "50": "u",
          "51": "e",
          "52": "s",
          "53": "(",
          "54": "b",
          "55": "u",
          "56": "c",
          "57": "k",
          "58": "e",
          "59": "t",
          "60": ":",
          "61": " ",
          "62": "v",
          "63": ".",
          "64": "d",
          "65": "e",
          "66": "f",
          "67": "a",
          "68": "u",
          "69": "l",
          "70": "t",
          "71": "B",
          "72": "u",
          "73": "c",
          "74": "k",
          "75": "e",
          "76": "t",
          "77": ",",
          "78": " ",
          "79": "t",
          "80": "a",
          "81": "g",
          "82": ":",
          "83": " ",
          "84": "\"",
          "85": "t",
          "86": "e",
          "87": "s",
          "88": "t",
          "89": "i",
          "90": "d",
          "91": "\"",
          "92": ")",
          "query": "import \"influxdata/influxdb/schema\"\r\nimport \"strings\"\r\n\r\nschema.tagValues(bucket: v.defaultBucket, tag: \"testid\")\r\n  |> filter(fn: (r) => not strings.hasPrefix(v: r._value, prefix: \"K6-UI-\"))\r\n"
        },
        "refresh": 1,
        "regex": "",
        "skipUrlSync": false,
        "sort": 0,
        "type": "query"
      },
      {
        "allowCustomValue": false,
        "current": {
          "text": "All",
          "value": "$__all"
        },
        "datasource": {
          "type": "influxdb",
          "uid": "P5697886F9CA74929"
        },
        "definition": "import \"influxdata/influxdb/schema\"\r\nschema.tagValues(bucket: v.defaultBucket, tag: \"scenario\")",
        "hide": 0,
        "includeAll": true,
        "label": "Config",
        "multi": false,
        "name": "scenario",
        "options": [],
        "query": {
          "0": "i",
          "1": "m",
          "2": "p",
          "3": "o",
          "4": "r",
          "5": "t",
          "6": " ",
          "7": "\"",
          "8": "i",
          "9": "n",
          "10": "f",
          "11": "l",
          "12": "u",
          "13": "x",
          "14": "d",
          "15": "a",
          "16": "t",
          "17": "a",
          "18": "/",
          "19": "i",
          "20": "n",
          "21": "f",
          "22": "l",
          "23": "u",
          "24": "x",
          "25": "d",
          "26": "b",
          "27": "/",
          "28": "s",
          "29": "c",
          "30": "h",
          "31": "e",
          "32": "m",
          "33": "a",
          "34": "\"",
          "35": "\r",
          "36": "\n",
          "37": "s",
          "38": "c",
          "39": "h",
          "40": "e",
          "41": "m",
          "42": "a",
          "43": ".",
          "44": "t",
          "45": "a",
          "46": "g",
          "47": "V",
          "48": "a",
          "49": "l",
          "50": "u",
          "51": "e",
          "52": "s",
          "53": "(",
          "54": "b",
          "55": "u",
          "56": "c",
          "57": "k",
          "58": "e",
          "59": "t",
          "60": ":",
          "61": " ",
          "62": "v",
          "63": ".",
          "64": "d",
          "65": "e",
          "66": "f",
          "67": "a",
          "68": "u",
          "69": "l",
          "70": "t",
          "71": "B",
          "72": "u",
          "73": "c",
          "74": "k",
          "75": "e",
          "76": "t",
          "77": ",",
          "78": " ",
          "79": "t",
          "80": "a",
          "81": "g",
          "82": ":",
          "83": " ",
          "84": "\"",
          "85": "s",
          "86": "c",
          "87": "e",
          "88": "n",
          "89": "a",
          "90": "r",
          "91": "i",
          "92": "o",
          "93": "\"",
          "94": ")",
          "query": "import \"influxdata/influxdb/schema\"\r\nschema.tagValues(bucket: v.defaultBucket, tag: \"scenario\")"
        },
        "refresh": 1,
        "regex": "",
        "skipUrlSync": false,
        "sort": 0,
        "type": "query"
      },
      {
        "current": {
          "text": "All",
          "value": "$__all"
        },
        "datasource": {
          "type": "influxdb",
          "uid": "P5697886F9CA74929"
        },
        "definition": "import \"influxdata/influxdb/schema\"\r\nschema.tagValues(bucket: v.defaultBucket, tag: \"branch\")",
        "description": "",
        "hide": 0,
        "includeAll": true,
        "label": "Branch",
        "multi": false,
        "name": "branch",
        "options": [],
        "query": "import \"influxdata/influxdb/schema\"\r\nschema.tagValues(bucket: v.defaultBucket, tag: \"branch\")",
        "refresh": 1,
        "regex": "",
        "skipUrlSync": false,
        "sort": 0,
        "type": "query"
      },
      {
        "current": {
          "selected": true,
          "text": [
            "All"
          ],
          "value": [
            "$__all"
          ]
        },
        "datasource": {
          "type": "datasource",
          "uid": "grafana"
        },
        "definition": "import \"influxdata/influxdb/schema\"\r\nschema.tagValues(bucket: v.defaultBucket, tag: \"release\")",
        "description": "",
        "hide": 0,
        "includeAll": true,
        "label": "Release",
        "multi": true,
        "name": "release",
        "options": [],
        "query": {
          "query": "import \"influxdata/influxdb/schema\"\r\nschema.tagValues(bucket: v.defaultBucket, tag: \"release\")"
        },
        "refresh": 1,
        "regex": "",
        "skipUrlSync": false,
        "sort": 0,
        "type": "query"
      },
      {
        "current": {
          "text": "All",
          "value": "$__all"
        },
        "datasource": {
          "type": "influxdb",
          "uid": "P5697886F9CA74929"
        },
        "definition": "import \"influxdata/influxdb/schema\"\r\nschema.tagValues(bucket: v.defaultBucket, tag: \"buildId\")",
        "description": "",
        "hide": 0,
        "includeAll": true,
        "label": "Build ID",
        "multi": false,
        "name": "buildId",
        "options": [],
        "query": "import \"influxdata/influxdb/schema\"\r\nschema.tagValues(bucket: v.defaultBucket, tag: \"buildId\")",
        "refresh": 1,
        "regex": "",
        "skipUrlSync": false,
        "sort": 0,
        "type": "query"
      }
    ]
  },
  "time": {
    "from": "now-30m",
    "to": "now"
  },
  "timeRangeUpdatedDuringEditOrView": false,
  "timepicker": {},
  "timezone": "",
  "title": "K6 - API - Live",
  "uid": "me9ngk8kay5wtr",
  "version": 1,
  "weekStart": ""
}






